[{"/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/index.tsx":"1","/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/App.tsx":"2","/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/TodoItem.tsx":"3","/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/AddTodo.tsx":"4","/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/TodoListItem.tsx":"5","/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/UpdateTodo.tsx":"6"},{"size":432,"mtime":1611207111252,"results":"7","hashOfConfig":"8"},{"size":3763,"mtime":1611230931089,"results":"9","hashOfConfig":"8"},{"size":1024,"mtime":1611286358535,"results":"10","hashOfConfig":"8"},{"size":890,"mtime":1611286919869,"results":"11","hashOfConfig":"8"},{"size":667,"mtime":1611286348688,"results":"12","hashOfConfig":"8"},{"size":967,"mtime":1611286683109,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"7lwbju",{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/index.tsx",[],["28","29"],"/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/App.tsx",["30","31","32","33","34","35","36","37"],"import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// Import components from Ant Design\nimport { Alert, List } from \"antd\";\nimport { Input, Space } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Title from \"antd/lib/typography/Title\";\nimport { TodoItem } from \"./TodoItem\";\nimport { AddTodo } from \"./AddTodo\";\nimport { TodoListItem } from \"./TodoListItem\";\nimport { v4 as uuid } from \"uuid\";\nimport { UpdateTodo } from \"./UpdateTodo\";\n\nconst { Search } = Input;\n\n// Initial todos\nconst initialTodos = [\n  {\n    id: uuid(),\n    text: \"Todo 1\",\n    completed: false,\n  },\n  {\n    id: uuid(),\n    text: \"Todo 2\",\n    completed: true,\n  },\n];\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [updateTodo, setUpdateTodo] = useState({\n    id: \"\",\n    text: \"\",\n    completed: false,\n  });\n\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  // Add Todo\n  const addTodo: addTodo = (todo) => {\n    setTodos([\n      ...todos,\n      {\n        id: uuid(),\n        text: todo.text,\n        completed: todo.completed,\n      },\n    ]);\n    console.log(todo);\n  };\n\n  // Change state of completed todo\n  const toggleTodo: toggleTodo = (selectedTodo) => {\n    const newTodos = todos.map((todo) => {\n      if (todo == selectedTodo) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  // Show update todo\n  const showUpdateTodo: showUpdateTodo = (todoToUpdate) => {\n    setUpdateTodo(todoToUpdate);\n    console.log(todoToUpdate);\n  };\n\n  // Update the todo\n  const udpateTodo: updateTodo = (todoToUpdate) => {\n    console.log(\"UPDATE TODO: \", updateTodo);\n    todos.map((todo) => {\n      console.log(todo);\n\n      if (todo.id == todoToUpdate.id) {\n        {\n          setUpdateTodo({ ...updateTodo, text: \"\" });\n        }\n        setTodos(\n          todos.map((todo) =>\n            todoToUpdate.id == todo.id\n              ? { ...todo, text: todoToUpdate.text }\n              : todo\n          )\n        );\n        setShowSuccess(!showSuccess);\n        setInterval(() => {\n          setShowSuccess(false);\n        }, 2000);\n      }\n    });\n  };\n\n  // Delete the todo\n  const deleteTodo: deleteTodo = (deleteTodo) => {\n    setTodos(todos.filter((todo) => todo.id !== deleteTodo.id));\n    setShowDelete(!showDelete);\n    setInterval(() => {\n      setShowDelete(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"container\">\n      <Space direction=\"vertical\" style={{ width: 800 }}>\n        <Title>Todo App</Title>\n        <AddTodo addTodo={addTodo} />\n      </Space>\n\n      {/* Displaying alert once any action takes place */}\n      {showSuccess ? (\n        <div>\n          {console.log(updateTodo.text)}\n          <br />\n          <Alert\n            type=\"success\"\n            message={`Successfully updated ${updateTodo.text}`}\n            showIcon\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {/* Displaying the Alert once the todo is deleted */}\n      {showDelete ? (\n        <div>\n          <br />\n          <Alert\n            type=\"warning\"\n            message={`Successfully deleted Todo`}\n            showIcon\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <br />\n      <br />\n\n      {/* Displaying the Update todo only \n      if there is any todo to udpate*/}\n      {updateTodo.text !== \"\" ? (\n        <UpdateTodo todoToUpdate={updateTodo} udpateTodo={udpateTodo} />\n      ) : (\n        \"\"\n      )}\n\n      <TodoListItem\n        todos={todos}\n        toggleTodo={toggleTodo}\n        showUpdateTodo={showUpdateTodo}\n        deleteTodo={deleteTodo}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/TodoItem.tsx",["38","39","40","41","42"],"/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/AddTodo.tsx",["43"],"/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/TodoListItem.tsx",[],"/Users/shanjairaj/Documents/Coding/Typescript/typescript-todo-app/src/UpdateTodo.tsx",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":17,"nodeType":"51","messageId":"52","endLine":5,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":9,"column":10,"nodeType":"51","messageId":"52","endLine":9,"endColumn":18},{"ruleId":"49","severity":1,"message":"54","line":15,"column":9,"nodeType":"51","messageId":"52","endLine":15,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":59,"column":16,"nodeType":"57","messageId":"58","endLine":59,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":79,"column":22,"nodeType":"61","messageId":"62","endLine":79,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":82,"column":19,"nodeType":"57","messageId":"58","endLine":82,"endColumn":21},{"ruleId":"63","severity":1,"message":"64","line":83,"column":9,"nodeType":"65","messageId":"66","endLine":85,"endColumn":10},{"ruleId":"55","severity":1,"message":"56","line":88,"column":29,"nodeType":"57","messageId":"58","endLine":88,"endColumn":31},{"ruleId":"49","severity":1,"message":"67","line":4,"column":16,"nodeType":"51","messageId":"52","endLine":4,"endColumn":23},{"ruleId":"49","severity":1,"message":"68","line":4,"column":25,"nodeType":"51","messageId":"52","endLine":4,"endColumn":31},{"ruleId":"49","severity":1,"message":"69","line":4,"column":33,"nodeType":"51","messageId":"52","endLine":4,"endColumn":37},{"ruleId":"49","severity":1,"message":"70","line":5,"column":18,"nodeType":"51","messageId":"52","endLine":5,"endColumn":23},{"ruleId":"49","severity":1,"message":"71","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":20},{"ruleId":"49","severity":1,"message":"72","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":25,"column":6,"nodeType":"75","endLine":25,"endColumn":20,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'TodoItem' is defined but never used.","'Search' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'message' is defined but never used.","'Avatar' is defined but never used.","'Spin' is defined but never used.","'Input' is defined but never used.","'UpdateTodo' is defined but never used.","'Title' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newTodo.text'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [newTodo.text, todoToUpdate]",{"range":"82","text":"83"},[570,584],"[newTodo.text, todoToUpdate]"]